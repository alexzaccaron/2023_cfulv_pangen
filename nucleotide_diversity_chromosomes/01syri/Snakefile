
# Snakemake pipeline to identify poymorphisms based on whole-genome alignments


STRAINS=["R4", "R5", "W4", "W7"]


rule all:
   input:
      expand("output/04syri/{strain}_syri.out", strain=STRAINS)



##nucmer: align two genomes with nucmer
rule nucmer:
   conda: "env.yml"
   input:
      ref="data/R0.fasta",
      qry="data/{strain}.fasta"
   output:
      "output/01nucmer/R0_{strain}.delta"
   shell: """
      nucmer \
         -p output/01nucmer/R0_{wildcards.strain} -t 4 \
         --maxmatch -c 100 -b 500 -l 50 {input.ref} {input.qry}
   """



##delta_filter: filter alignment produced by nucmer
rule delta_filter:
   conda: "env.yml"
   input:
      "output/01nucmer/R0_{strain}.delta"
   output:
      "output/02delta_filter/R0_{strain}.delta.filt"
   shell: """
      delta-filter -m -i 90 -l 100 {input} > {output}
   """


##show_coords: convert the delta file produced by NUCmer to tab format
rule show_coords:
   conda: "env.yml"
   input:
      "output/02delta_filter/R0_{strain}.delta.filt"
   output:
      "output/03show_coords/R0_{strain}.delta.filt.coords"
   shell: """
      show-coords -THrd {input} > {output}
   """



##syri: call syri to identify polymorphisms
rule syri:
   conda: "env.yml"
   input:
      coords="output/03show_coords/R0_{strain}.delta.filt.coords",
      delta="output/02delta_filter/R0_{strain}.delta.filt",
      ref="data/R0.fasta",
      qry="data/{strain}.fasta"
   output:
      "output/04syri/{strain}_syri.out"
   shell: """
      syri \
         -c {input.coords} \
         -d {input.delta} \
         -r {input.ref} \
         -q {input.qry} \
         --dir output/04syri/ \
         --prefix {wildcards.strain}_ \
         --nc 4
   """




